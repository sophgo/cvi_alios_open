/*
 * Copyright (C) 2017-2020 Alibaba Group Holding Limited
 */
/* c_eip28.h
 *
 * Configuration options for the EIP28 Driver Library.
 * The project-specific cs_eip28.h file is included,
 * where-after defaults are provided for missing parameters.
 *
 * Do not edit this file; edit cs_eip28.h instead.
 */



// get project-level configuration settings
#include "cs_eip28.h"
#include "soc.h"

// set this option to enable checking of all arguments to all EIP28 functions,
// disable it to reduce code size and reduce overhead
// #define EIP28_STRICT_ARGS

// set this option to enable checking the vectors in PKA RAM
// #define EIP28_STRICT_VECTORS

// Disable strict checking of vectors in PKA RAM if the strict
// argument check is disabled
#ifndef EIP28_STRICT_ARGS
#ifdef EIP28_STRICT_VECTORS
#undef EIP28_STRICT_VECTORS
#endif
#endif

// provide backup values for all missing configuration parameters

// Maximum length of a vector (in bits) that is supported by the EIP28 device.
#ifndef EIP28_VECTOR_BITS_MAX
#define EIP28_VECTOR_BITS_MAX  4192
#endif


// Maximum length of a vector (in words) that is supported by the EIP28 device.
#ifndef EIP28_VECTOR_MAXLEN
#define EIP28_VECTOR_MAXLEN (EIP28_VECTOR_BITS_MAX/32)
#endif


// If both the divide and modulus functions are removed then the
// ReadResult_Reminder function can also be removed.
#ifdef EIP28_REMOVE_DIVIDE
#ifdef EIP28_REMOVE_MODULO
#define EIP28_REMOVE_READRESULT_REMAINDER
#endif
#endif

// Offset of PKA RAM with respect to address of PKA registers.
#ifndef EIP28_OFFSET_PKARAM
#define EIP28_OFFSET_PKARAM     0x2000
#endif


/****************************************************************************
 * Adapter general optional configuration parameters
 */

// Enable Montgomery ladder calculations for ModExp, ModExpCRT, DSASign and
// DSAVerify functions
// Other values still use the ModExpVar method using the programmed number of odd powers.
// Can only be used on EIP-28A and EIP-28B configurations with at least HW2.2/FW3.2.
// EIP28_MONTGOMERY_LADDER_OPTION

// Use this to remove firmware download.
// Some EIP-28 hardware versions have firmware in ROM.
//#define EIP28_REMOVE_FIRMWARE_DOWNLOAD

// Use this option to remove the capability register check.
// This register is present in all EIP-28 hardware versions.
// EIP28_REMOVE_EIPNR_CHECK

// Use this option to remove the BigNumber helper functions to reduce code
// size and reduce overhead.
// EIP28_REMOVE_BIGUINT_HELPER_FUNC

// Use this option to remove the BigNumber Zero Pad helper function to reduce
// code size and reduce overhead.
// EIP28_REMOVE_BIGUINT_ZP_HELPER_FUNC

// *_REMOVE configuration options for PKCP commands
// Enable them to reduce code size and reduce overhead
// EIP28_REMOVE_ADD
// EIP28_REMOVE_SUBTRACT
// EIP28_REMOVE_SUBADD
// EIP28_REMOVE_SHIFTRIGHT
// EIP28_REMOVE_SHIFTLEFT
// EIP28_REMOVE_MULTIPLY
// EIP28_REMOVE_MODULO
// EIP28_REMOVE_MODULO_OR_COPY
// EIP28_REMOVE_DIVIDE
// EIP28_REMOVE_COPY
// EIP28_REMOVE_COMPARE
// EIP28_REMOVE_MODINV
// EIP28_REMOVE_MODEXP
// EIP28_REMOVE_MODEXPCRT
// EIP28_REMOVE_ECCADD
// EIP28_REMOVE_ECCMUL
// EIP28_REMOVE_ECCMULMONT
// EIP28_REMOVE_DSASIGN
// EIP28_REMOVE_DSAVERIFY
// EIP28_REMOVE_ECCDSASIGN
// EIP28_REMOVE_ECCDSAVERIFY


/* end of file c_eip28.h */
